swagger: '2.0'
info:
  description: ''
  version: 1.0.0
  title: Backbone
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: sysadmin@malariagen.net
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: localhost
basePath: /v1
#host: u3bjceceak.execute-api.eu-west-1.amazonaws.com
#basePath: "/dev/sims-backbone-service/v1"
schemes:
  - http
security:
  - OauthSecurity: []
tags:
  - name: source
    description: Everything about your sources
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: samplingEvent
    description: Access to Backbone samplingEvents
  - name: report
    description: Reports
securityDefinitions:
    OauthSecurity:
      type: oauth2
      flow: accessCode
      authorizationUrl: "https://www.malariagen.net/sso/oauth2.0/authorize"
      tokenUrl: "https://www.malariagen.net/sso/oauth2.0/accessToken"
      x-tokenInfoUrl: "https://www.malariagen.net/sso/oauth2.0/profile"
paths:
  '/location':
    $ref: './swagger/location/create.yaml'
  '/location/{locationId}':
    $ref: './swagger/location/item.yaml'
  '/location/gps/{latitude}/{longitude}':
    $ref: './swagger/location/gps.yaml'
  '/location/partner/{partnerId}':
    $ref: './swagger/location/partner.yaml'
  '/locations':
    $ref: './swagger/location/locations.yaml'
  '/samplingEvent':
    $ref: './swagger/sampling_event/create.yaml'
  '/samplingEvent/{samplingEventId}':
    $ref: './swagger/sampling_event/item.yaml'
  '/samplingEvents':
    $ref: './swagger/sampling_event/items.yaml'
  '/samplingEvents/merge/{into}/{merged}':
    $ref: './swagger/sampling_event/merge.yaml'
  '/samplingEvents/attr/{propName}/{propValue}':
    $ref: './swagger/sampling_event/by_attr.yaml'
  '/samplingEvents/os/attr/{propName}/{propValue}':
    $ref: './swagger/sampling_event/by_os_attr.yaml'
  '/samplingEvents/location/{locationId}':
    $ref: './swagger/sampling_event/by_location.yaml'
  '/samplingEvents/study/{studyName}':
    $ref: './swagger/sampling_event/by_study.yaml'
  '/samplingEvents/taxa/{taxaId}':
    $ref: './swagger/sampling_event/by_taxa.yaml'
  '/samplingEvents/eventSet/{eventSetId}':
    $ref: './swagger/sampling_event/by_set.yaml'
  '/individual':
    $ref: './swagger/individual/create.yaml'
  '/individual/{individualId}':
    $ref: './swagger/individual/item.yaml'
  '/individuals/attr/{propName}/{propValue}':
    $ref: './swagger/individual/by_attr.yaml'
  '/individuals/merge/{into}/{merged}':
    $ref: './swagger/individual/merge.yaml'
  '/individuals':
    $ref: './swagger/individual/individuals.yaml'
  '/originalSample':
    $ref: './swagger/original_sample/create.yaml'
  '/originalSample/{originalSampleId}':
    $ref: './swagger/original_sample/item.yaml'
  '/originalSamples':
    $ref: './swagger/original_sample/items.yaml'
  '/originalSamples/merge/{into}/{merged}':
    $ref: './swagger/original_sample/merge.yaml'
  '/originalSamples/attr/{propName}/{propValue}':
    $ref: './swagger/original_sample/by_attr.yaml'
  '/originalSamples/location/{locationId}':
    $ref: './swagger/original_sample/by_location.yaml'
  '/originalSamples/study/{studyName}':
    $ref: './swagger/original_sample/by_study.yaml'
  '/originalSamples/taxa/{taxaId}':
    $ref: './swagger/original_sample/by_taxa.yaml'
  '/originalSamples/eventSet/{eventSetId}':
    $ref: './swagger/original_sample/by_set.yaml'
  '/derivativeSample':
    $ref: './swagger/derivative_sample/create.yaml'
  '/derivativeSamples':
    $ref: './swagger/derivative_sample/items.yaml'
  '/derivativeSample/{derivativeSampleId}':
    $ref: './swagger/derivative_sample/item.yaml'
  '/derivativeSamples/attr/{propName}/{propValue}':
    $ref: './swagger/derivative_sample/by_attr.yaml'
  '/derivativeSamples/os/attr/{propName}/{propValue}':
    $ref: './swagger/derivative_sample/by_os_attr.yaml'
  '/derivativeSamples/taxa/{taxaId}':
    $ref: './swagger/derivative_sample/by_taxa.yaml'
  '/derivativeSamples/eventSet/{eventSetId}':
    $ref: './swagger/derivative_sample/by_set.yaml'
  '/derivativeSamples/study/{studyName}':
    $ref: './swagger/derivative_sample/by_study.yaml'
  '/assayDatum':
    $ref: './swagger/assay_data/create.yaml'
  '/assayDatum/{assayDatumId}':
    $ref: './swagger/assay_data/item.yaml'
  '/assayData/attr/{propName}/{propValue}':
    $ref: './swagger/assay_data/by_attr.yaml'
  '/assayData/os/attr/{propName}/{propValue}':
    $ref: './swagger/assay_data/by_os_attr.yaml'
  '/metadata/country/{countryId}':
    get:
      tags:
        - metadata
      summary: fetches all the names for a country
      description: 'guesses the search criteria'
      operationId: getCountryMetadata
      produces:
        - application/json
      parameters:
        - name: countryId
          in: path
          description: location
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: './swagger/definitions/location.yaml#/definitions/Country'
  '/metadata/taxonomy':
    get:
      tags:
        - metadata
      summary: fetches all the registered taxa
      description: 'returns all taxa'
      operationId: getTaxonomyMetadata
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: './swagger/definitions/original_sample.yaml#/definitions/Taxonomies'
    post:
      tags:
        - metadata
      description: 'Create a Taxonomy'
      operationId: createTaxonomy
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: taxonomy
          required: true
          schema:
            $ref: './swagger/definitions/original_sample.yaml#/definitions/Taxonomy'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: './swagger/definitions/original_sample.yaml#/definitions/Taxonomy'
  '/metadata/attr_types':
    get:
      tags:
        - metadata
      summary: fetches all the attr types
      description: 'returns all attr types in use'
      operationId: getAttrTypes
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              type: string
  '/metadata/location_attr_types':
    get:
      tags:
        - metadata
      summary: fetches all the location attr types
      description: 'returns all location attr types in use'
      operationId: getLocationAttrTypes
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              type: string
  '/studies':
    get:
      tags:
        - study
      summary: fetches studies
      description: ''
      operationId: downloadStudies
      produces:
        - application/json
      parameters:
        - name: start
          in: query
          description: for pagination start the result set at a record x
          required: false
          type: integer
        - name: count
          in: query
          description: for pagination the number of entries to return
          required: false
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            $ref: './swagger/definitions/swagger.yaml#/definitions/Studies'
  '/study/{studyName}':
    get:
      tags:
        - study
      summary: fetches a study
      description: ''
      operationId: downloadStudy
      produces:
        - application/json
      parameters:
        - name: studyName
          in: path
          description: ID of study to fetch
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: './swagger/definitions/swagger.yaml#/definitions/Study'
    put:
      tags:
        - study
      summary: updates a study
      description: ''
      operationId: updateStudy
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: studyName
          in: path
          description: ID of study to update
          required: true
          type: string
        - in: body
          name: study
          required: true
          schema:
            $ref: './swagger/definitions/swagger.yaml#/definitions/Study'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: './swagger/definitions/swagger.yaml#/definitions/Study'
        '404':
          description: study not found
          schema:
              type: string
  '/eventSet/{eventSetId}':
    post:
      tags:
        - eventSet
      summary: creates an eventSet
      description: ''
      operationId: createEventSet
      produces:
        - application/json
      parameters:
        - name: eventSetId
          in: path
          description: ID of eventSet to create
          required: true
          type: string
      responses:
        '201':
          description: successful operation
          schema:
            $ref: './swagger/definitions/sampling_event.yaml#/definitions/EventSet'
    get:
      tags:
        - eventSet
      summary: fetches an eventSet
      description: ''
      operationId: downloadEventSet
      produces:
        - application/json
      parameters:
        - name: eventSetId
          in: path
          description: ID of eventSet to fetch
          required: true
          type: string
        - name: start
          in: query
          description: for pagination start the result set at a record x
          required: false
          type: integer
        - name: count
          in: query
          description: for pagination the number of entries to return
          required: false
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            $ref: './swagger/definitions/sampling_event.yaml#/definitions/EventSet'
    put:
      tags:
        - eventSet
      summary: updates an eventSet
      description: ''
      operationId: updateEventSet
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: eventSetId
          in: path
          description: ID of eventSet to update
          required: true
          type: string
        - in: body
          name: eventSet
          required: true
          schema:
            $ref: './swagger/definitions/sampling_event.yaml#/definitions/EventSet'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: './swagger/definitions/sampling_event.yaml#/definitions/EventSet'
        '404':
          description: EventSet not found
          schema:
              type: string
    delete:
      tags:
        - eventSet
      summary: deletes an eventSet
      description: ''
      operationId: deleteEventSet
      produces:
        - application/json
      parameters:
        - name: eventSetId
          in: path
          description: ID of eventSet to delete
          required: true
          type: string
      responses:
        '200':
          description: successful operation
        '404':
          description: EventSet not found
  '/eventSet/{eventSetId}/{samplingEventId}':
    post:
      tags:
        - eventSet
      summary: Adds a samplingEvent to an eventSet
      description: ''
      operationId: createEventSetItem
      produces:
        - application/json
      parameters:
        - name: eventSetId
          in: path
          description: ID of eventSet to modify
          required: true
          type: string
        - name: samplingEventId
          in: path
          description: ID of samplingEvent to add to the set
          required: true
          type: string
#          format: uuid
      responses:
        '201':
          description: successful operation
        '404':
          description: EventSet or samplingEvent not found
    delete:
      tags:
        - eventSet
      summary: deletes a samplingEvent from an eventSet
      description: ''
      operationId: deleteEventSetItem
      produces:
        - application/json
      parameters:
        - name: eventSetId
          in: path
          description: ID of eventSet to modify
          required: true
          type: string
        - name: samplingEventId
          in: path
          description: ID of samplingEvent to remove from the set
          required: true
          type: string
#          format: uuid
      responses:
        '200':
          description: successful operation
        '404':
          description: EventSet or samplingEvent not found
  '/eventSet/{eventSetId}/notes/{noteId}':
    post:
      tags:
        - eventSet
      summary: Adds a note to an eventSet
      description: ''
      operationId: createEventSetNote
      produces:
        - application/json
      parameters:
        - name: eventSetId
          in: path
          description: ID of eventSet to modify
          required: true
          type: string
        - name: noteId
          in: path
          description: ID of note to modify in the set
          required: true
          type: string
        - in: body
          name: note
          required: true
          schema:
            $ref: './swagger/definitions/sampling_event.yaml#/definitions/EventSetNote'
      responses:
        '201':
          description: successful operation
        '401':
          description: EventSet or samplingEvent not found
    put:
      tags:
        - eventSet
      summary: Adds a note to an eventSet
      description: ''
      operationId: updateEventSetNote
      produces:
        - application/json
      parameters:
        - name: eventSetId
          in: path
          description: ID of eventSet to modify
          required: true
          type: string
        - name: noteId
          in: path
          description: ID of note to modify in the set
          required: true
          type: string
        - in: body
          name: note
          required: true
          schema:
            $ref: './swagger/definitions/sampling_event.yaml#/definitions/EventSetNote'
      responses:
        '200':
          description: successful operation
        '404':
          description: EventSet or samplingEvent not found
    delete:
      tags:
        - eventSet
      summary: deletes an eventSet note
      description: ''
      operationId: deleteEventSetNote
      produces:
        - application/json
      parameters:
        - name: eventSetId
          in: path
          description: ID of eventSet to modify
          required: true
          type: string
        - name: noteId
          in: path
          description: ID of note to remove from the set
          required: true
          type: string
      responses:
        '200':
          description: successful operation
        '404':
          description: EventSet or samplingEvent not found
  '/eventSets':
    get:
      tags:
        - eventSet
      summary: fetches eventSets
      description: ''
      operationId: downloadEventSets
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: './swagger/definitions/sampling_event.yaml#/definitions/EventSets'
  '/missingTaxon':
    get:
      tags:
        - report
      summary: fetches studies with uncurated taxon
      description: ''
      operationId: missingTaxon
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: './swagger/definitions/swagger.yaml#/definitions/Studies'
  '/missingLocations':
    get:
      tags:
        - report
      summary: fetches studies with sampling events with missing locations
      description: ''
      operationId: missingLocations
      produces:
        - application/json
      parameters:
        - name: include_country
          in: query
          description: include studies where only a country level location is set
          required: false
          default: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: './swagger/definitions/swagger.yaml#/definitions/Studies'
  '/uncuratedLocations':
    get:
      tags:
        - report
      summary: fetches studies with uncurated locations
      description: ''
      operationId: uncuratedLocations
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: './swagger/definitions/swagger.yaml#/definitions/Studies'
  '/multipleLocationNames':
    get:
      tags:
        - report
      summary: fetches studies with multiple locations with the same name
      description: ''
      operationId: multipleLocationNames
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: './swagger/definitions/swagger.yaml#/definitions/Studies'
  '/multipleLocationGPS':
    get:
      tags:
        - report
      summary: fetches studies with multiple locations with the same GPS
      description: ''
      operationId: multipleLocationGPS
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: './swagger/definitions/swagger.yaml#/definitions/Studies'
